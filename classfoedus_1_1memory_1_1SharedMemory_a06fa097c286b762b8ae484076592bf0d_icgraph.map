<map id="foedus::memory::SharedMemory::mark_for_release" name="foedus::memory::SharedMemory::mark_for_release">
<area shape="rect" id="node2" href="$classfoedus_1_1soc_1_1SharedMemoryRepo.html#a78e80ef586cc59284a2c9af365e1f0b6" title="Marks shared memories as being removed so that it will be reclaimed when all processes detach it..." alt="" coords="277,217,462,259"/>
<area shape="rect" id="node15" href="$classfoedus_1_1memory_1_1SharedMemory.html#a20f2fb7b7f86ab5c4134452f1267eeb5" title="Releases the memory block IF this process has an ownership. " alt="" coords="264,324,475,365"/>
<area shape="rect" id="node3" href="$classfoedus_1_1soc_1_1SharedMemoryRepo.html#aa961c615ceddd0dd0d3943629fd1a147" title="Detaches and releases the shared memories. " alt="" coords="535,210,721,266"/>
<area shape="rect" id="node11" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#a998409bf9e2aff10ec8dfb02f17bb956" title="Wait for child SOCs to start up and at least finish attaching shared memory. " alt="" coords="787,5,990,47"/>
<area shape="rect" id="node4" href="$classfoedus_1_1soc_1_1SharedMemoryRepo.html#ae93958bcd01826cc39e3b84333d1c3d9" title="foedus::soc::SharedMemory\lRepo::~SharedMemoryRepo" alt="" coords="795,188,982,229"/>
<area shape="rect" id="node5" href="$classfoedus_1_1soc_1_1SharedMemoryRepo.html#aa42d7f6cd529569e79e4cfc298adb39b" title="Master process creates shared memories by calling this method. " alt="" coords="781,356,996,397"/>
<area shape="rect" id="node6" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#a3dd3a524e5fbb0b8f9cb52dd21689d0a" title="Called as part of initialize_once() if this is a master engine. " alt="" coords="1295,268,1497,309"/>
<area shape="rect" id="node8" href="$classfoedus_1_1soc_1_1SharedMemoryRepo.html#a4b6032d62764c145607306973945bb8c" title="Child processes (emulated or not) set a reference to shared memory and receive the EngnieOption value..." alt="" coords="785,421,992,463"/>
<area shape="rect" id="node10" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#a1d435277bd229b7988c3f249c0a0730f" title="foedus::soc::SocManagerPimpl\l::uninitialize_once" alt="" coords="787,71,990,112"/>
<area shape="rect" id="node13" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#ad9ef70c0b175a6535731e2cf0c2370f1" title="Launch children via fork. " alt="" coords="1044,239,1247,280"/>
<area shape="rect" id="node14" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#a4a9091baae2ba21b2cb888da8d391818" title="Launch children via spawn. " alt="" coords="1044,129,1247,171"/>
<area shape="rect" id="node7" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#aa14e68e8b8e3902f2b139b6388e712d8" title="foedus::soc::SocManagerPimpl\l::initialize_once" alt="" coords="1545,313,1748,355"/>
<area shape="rect" id="node9" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#a1d09b3bd25667fccd9bb831303788401" title="Called as part of initialize_once() if this is a child SOC engine. " alt="" coords="1295,359,1497,400"/>
<area shape="rect" id="node12" href="$classfoedus_1_1soc_1_1SocManagerPimpl.html#a77d275f92471e6ac9e0c4bb4c609665f" title="Launch emulated children as threads. " alt="" coords="1044,35,1247,76"/>
<area shape="rect" id="node16" href="$classfoedus_1_1memory_1_1SharedMemory.html#a7094d7eaf5f5c149a5d52fd9ce6fadd0" title="Automatically releases the memory. " alt="" coords="523,356,733,397"/>
<area shape="rect" id="node17" href="$classfoedus_1_1memory_1_1SharedMemory.html#afab2d81be8ba9c96b24dcf977cc3b792" title="Move assignment operator that steals the memory block from other. " alt="" coords="523,487,733,528"/>
<area shape="rect" id="node18" href="$classfoedus_1_1memory_1_1SharedMemory.html#ae4b91eee2dce03e4b3aac612c71b88a0" title="Newly allocate a shared memory of given size on given NUMA node. " alt="" coords="523,291,733,332"/>
<area shape="rect" id="node19" href="$classfoedus_1_1memory_1_1SharedMemory.html#a690fd766729121b64adf28994a8a6660" title="Attach an already&#45;allocated shared memory so that this object points to the memory. " alt="" coords="523,421,733,463"/>
</map>
